{"version":3,"sources":["com/app/core.cljs"],"mappings":"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","names":["com.app.core/level","cljs.core.atom","com.app.core/game-state","com.app.core/input","com.app.core/reset-stage","cljs.core/reset!","curr","G__33522","cljs.core/deref","com.app.stage/stages","com.app.generator/init-boards","com.app.core/clear-stage?","cljs.core/every?","fexpr__33523","com.app.core/pre-fixed-pos","boards","board-count","G__33524","js/Error","G__33525","G__33526","G__33527","com.app.core/Grid","fexpr__33528","cljs.core/first","G__33529","G__33530","G__33531","fexpr__33532","G__33533","G__33534","G__33535","fexpr__33536","cljs.core/second","G__33537","G__33538","G__33539","fexpr__33540","G__33541","G__33542","G__33543","fexpr__33544","G__33545","G__33546","G__33547","fexpr__33548","cljs.core.nth","G__33549","G__33550","G__33551","fexpr__33552","G__33553","G__33554","G__33555","fexpr__33556","G__33557","G__33558","G__33559","fexpr__33560","G__33561","G__33562","G__33563","fexpr__33564","G__33565","G__33566","G__33567","fexpr__33568","G__33569","G__33570","G__33571","fexpr__33572","G__33573","G__33574","G__33575","fexpr__33576","G__33577","G__33578","G__33579","fexpr__33580","G__33581","G__33582","G__33583","fexpr__33584","G__33585","G__33586","G__33587","fexpr__33588","G__33589","G__33590","G__33591","fexpr__33592","G__33593","G__33594","G__33595","fexpr__33596","G__33597","G__33598","G__33599","fexpr__33600","G__33601","G__33602","G__33603","fexpr__33604","G__33605","G__33606","G__33607","fexpr__33608","com.app.core/Cell","cell-data","col","row","start-top-pos","start-left-pos","cljs.core/name","com.app.core/Row","rows-data","cljs.core.map_indexed","item","board","com.app.core/All-Board","fexpr__33609","div","cljs.core/count","fexpr__33611","G__33612","com.app.core/Title","com.app.core/Adfit","js/module$node_modules$react_adfit_web_component$dist$react_adfit_web_component.default","com.app.core/Game-screen","com.app.core/capture-key","keycode-map","key-handler","js/goog.events.KeyHandler","js/document","press-fn","key-press","temp__5753__auto__","f","cljs.core.get","goog.events/listen","com.app.core/update-render","cljs.core.println","cljs.core.swap_BANG_","com.app.move/calc-next-game-state","reagent.dom.render","js/document.getElementById","js/alert","cljs.core/inc","G__33613","com.app.core/user-move","key","cljs.core/concat","com.app.core/user-reset","com.app.core/user-undo","p1__33614#","cljs.core.drop_last","com.app.core/reagent-content-fn","goog.events.KeyCodes/RIGHT","goog.events.KeyCodes/LEFT","goog.events.KeyCodes/UP","goog.events.KeyCodes/DOWN","goog.events.KeyCodes/SPACE","goog.events.KeyCodes/BACKSPACE","goog.events.KeyCodes/N","G__33615","com.app.core/run"],"sourcesContent":["(ns com.app.core\r\n  (:require\r\n    [cljs.core.async :as async\r\n     :refer [<! >! chan close! sliding-buffer put! alts! timeout]]\r\n    [com.app.generator :as g]\r\n    [com.app.move :as m]\r\n    [com.app.stage :refer [stages]]\r\n    [reagent.core :as r]\r\n    [reagent.dom :as rdom]\r\n    [com.app.generator :as map]\r\n    [cljs.core.async :as c]\r\n    [goog.events.KeyCodes :as keycodes]\r\n    [goog.events :as gev]\r\n    [\"react-adfit-web-component\" :as ad :default AdfitWebComponent])\r\n  (:import [goog.events EventType KeyHandler]))\r\n\r\n(set! *warn-on-infer* false)\r\n\r\n(def level (atom 1))\r\n(def game-state (atom nil))\r\n(def input (atom []))\r\n\r\n(defn reset-stage []\r\n  (reset! input [])\r\n  (let [curr (stages @level)]\r\n    (reset! game-state (g/init-boards (curr :answer) (curr :maps)))))\r\n\r\n(defn clear-stage? []\r\n  (every? :is_goalin (@game-state :boards)))\r\n\r\n(declare Grid)\r\n\r\n(defn pre-fixed-pos [boards board-count]\r\n  (case board-count\r\n    1 [:div\r\n       (Grid ((first boards) :display-board) 70 10)]\r\n    2 [:div\r\n       (Grid ((first boards) :display-board) 70 10)\r\n       (Grid ((second boards) :display-board) 70 210)]\r\n    3 [:div\r\n       (Grid ((first boards) :display-board) 70 10)\r\n       (Grid ((second boards) :display-board) 70 210)\r\n       (Grid ((nth boards 2) :display-board) 70 410)]\r\n    4 [:div\r\n       (Grid ((first boards) :display-board) 70 10)\r\n       (Grid ((second boards) :display-board) 70 210)\r\n       (Grid ((nth boards 2) :display-board) 270 10)\r\n       (Grid ((nth boards 3) :display-board) 270 210)]\r\n    5 [:div\r\n       (Grid ((first boards) :display-board) 70 10)\r\n       (Grid ((second boards) :display-board) 70 210)\r\n       (Grid ((nth boards 2) :display-board) 70 410)\r\n       (Grid ((nth boards 3) :display-board) 270 10)\r\n       (Grid ((nth boards 4) :display-board) 270 210)]\r\n    6 [:div\r\n       (Grid ((first boards) :display-board) 70 10)\r\n       (Grid ((second boards) :display-board) 70 210)\r\n       (Grid ((nth boards 2) :display-board) 70 410)\r\n       (Grid ((nth boards 3) :display-board) 270 10)\r\n       (Grid ((nth boards 4) :display-board) 270 210)\r\n       (Grid ((nth boards 5) :display-board) 270 410)]))\r\n\r\n\r\n(defn Cell [cell-data col row start-top-pos start-left-pos]\r\n  [:div.grid-cell\r\n   {:style {\r\n            :width    :32px\r\n            :height   :32px\r\n            :position :absolute\r\n            :top      (str (+ start-top-pos (* row 33)) \"px\")\r\n            :left     (str (+ start-left-pos (* col 33)) \"px\")\r\n            }}\r\n   [:img\r\n    {:src (str \"resouces/\" (name cell-data) \"_32.png\")}\r\n    ]])\r\n\r\n(defn Row [rows-data row start-top-pos start-left-pos]\r\n  [:div.grid-row\r\n   (map-indexed (fn [col item] (Cell item col row start-top-pos start-left-pos)) rows-data)])\r\n\r\n(defn Grid [board start-top-pos start-left-pos]\r\n  [:div.grid-container\r\n   (map-indexed (fn [row item] (Row item row start-top-pos start-left-pos)) board)])\r\n\r\n(defn All-Board []\r\n  (let [boards (@game-state :boards)\r\n        div (pre-fixed-pos boards (count ((stages @level) :maps)) )]\r\n    div))\r\n\r\n(defn Title []\r\n  [:div.title\r\n   [:p [:strong {:style {:color \"#474787\"}} \"PARALLEL WOARD    \"]\r\n    [:a {:style {:color \"#474787\" :position :flex} :href \"https://github.com/Lee-WonJun/Parallel-Woard\"} \"How to play\"]]\r\n   [:p {:style {:color \"#474787\"\r\n                :position :absolute\r\n                :top :500px\r\n                :left :10px\r\n                }} (str \"Your Answer : \" @input)]])\r\n\r\n(defn Adfit []\r\n  [:div.ad\r\n   {:style {:position :fixed\r\n            :bottom :0px\r\n            :z-index 999}}\r\n   [:> AdfitWebComponent {:adUnit \"DAN-Ju5YcfYb9l021EIO\"}]])\r\n\r\n(defn Game-screen []\r\n  [:div.screen\r\n   (Title)\r\n   (All-Board)\r\n   (Adfit)\r\n   ])\r\n\r\n\r\n(defn capture-key\r\n  \"Given a `keycode`, execute function `f` \"\r\n  [keycode-map]\r\n  (let [key-handler (KeyHandler. js/document)\r\n        press-fn (fn [key-press]\r\n                   (when-let [f (get keycode-map (.. key-press -keyCode))]\r\n                     (f)))]\r\n    (gev/listen key-handler\r\n                (-> KeyHandler .-EventType .-KEY)\r\n                press-fn)))\r\n\r\n(defn update-render []\r\n  (println @input)\r\n  (swap! game-state m/calc-next-game-state @input)\r\n  (rdom/render [Game-screen] (js/document.getElementById \"app\"))\r\n  (if (clear-stage?) (do\r\n                     (js/alert (str \"Clear:\" @level \"\\n Your Answer:\" @input))\r\n                     (swap! level inc)\r\n                     (if (stages @level)\r\n                       (do\r\n                         (reset-stage)\r\n                         (recur)\r\n                        )\r\n                       (js/alert (str \"Clear All Level\")))\r\n                     )))\r\n(defn user-move [key]\r\n  (swap! input concat [key])\r\n  (update-render))\r\n\r\n(defn user-reset []\r\n  (reset! input [])\r\n  (update-render))\r\n\r\n(defn user-undo []\r\n  (swap! input #(drop-last 1 %))\r\n  (update-render))\r\n\r\n\r\n(defn reagent-content-fn []\r\n  (capture-key {keycodes/RIGHT     #(user-move :right)\r\n                keycodes/LEFT      #(user-move :left)\r\n                keycodes/UP        #(user-move :up)\r\n                keycodes/DOWN      #(user-move :down)\r\n                keycodes/SPACE     #(user-undo)\r\n                keycodes/BACKSPACE #(user-reset)\r\n                ;keycodes/A         #(js/alert (@game-state :answer))\r\n                keycodes/N         #(do\r\n                                      (js/alert (str \"Pass \" @level))\r\n                                      (swap! level inc)\r\n                                      (if (stages @level)\r\n                                        (do\r\n                                          (reset-stage)\r\n                                          (update-render)\r\n                                          ))\r\n                                      )})\r\n  )\r\n\r\n\r\n(defn ^:export run []\r\n  (reset-stage)\r\n  (println @game-state)\r\n  (rdom/render [Game-screen] (js/document.getElementById \"app\"))\r\n  (reagent-content-fn))\r\n\r\n\r\n(comment\r\n  (js/alert [:e])\r\n  )"]}