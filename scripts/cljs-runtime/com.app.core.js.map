{"version":3,"sources":["com/app/core.cljs"],"mappings":"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","names":["com.app.core/level","cljs.core.atom","com.app.core/game-state","com.app.core/input","com.app.core/reset-stage","cljs.core/reset!","curr","G__32419","cljs.core/deref","com.app.stage/stages","com.app.generator/init-boards","com.app.core/clear-stage?","cljs.core/every?","fexpr__32420","com.app.core/pre-fixed-pos","boards","board-count","G__32421","js/Error","G__32422","G__32423","G__32424","com.app.core/Grid","fexpr__32425","cljs.core/first","G__32426","G__32427","G__32428","fexpr__32429","G__32430","G__32431","G__32432","fexpr__32433","cljs.core/second","G__32434","G__32435","G__32436","fexpr__32437","G__32438","G__32439","G__32440","fexpr__32441","G__32442","G__32443","G__32444","fexpr__32445","cljs.core.nth","G__32446","G__32447","G__32448","fexpr__32449","G__32450","G__32451","G__32452","fexpr__32453","G__32454","G__32455","G__32456","fexpr__32457","G__32458","G__32459","G__32460","fexpr__32461","G__32462","G__32463","G__32464","fexpr__32465","G__32466","G__32467","G__32468","fexpr__32469","G__32470","G__32471","G__32472","fexpr__32473","G__32474","G__32475","G__32476","fexpr__32477","G__32478","G__32479","G__32480","fexpr__32481","G__32482","G__32483","G__32484","fexpr__32485","G__32486","G__32487","G__32488","fexpr__32489","G__32490","G__32491","G__32492","fexpr__32493","G__32494","G__32495","G__32496","fexpr__32497","G__32498","G__32499","G__32500","fexpr__32501","G__32502","G__32503","G__32504","fexpr__32505","com.app.core/Cell","cell-data","col","row","start-top-pos","start-left-pos","cljs.core/name","com.app.core/Row","rows-data","cljs.core.map_indexed","item","board","com.app.core/All-Board","fexpr__32506","div","cljs.core/count","fexpr__32508","G__32509","com.app.core/Title","com.app.core/Game-screen","com.app.core/capture-key","keycode-map","key-handler","js/goog.events.KeyHandler","js/document","press-fn","key-press","temp__5753__auto__","f","cljs.core.get","goog.events/listen","com.app.core/update-render","cljs.core.println","cljs.core.swap_BANG_","com.app.move/calc-next-game-state","reagent.dom.render","js/document.getElementById","js/alert","cljs.core/inc","G__32510","com.app.core/user-move","key","cljs.core/concat","com.app.core/user-reset","com.app.core/user-undo","p1__32511#","cljs.core.drop_last","com.app.core/reagent-content-fn","goog.events.KeyCodes/RIGHT","goog.events.KeyCodes/LEFT","goog.events.KeyCodes/UP","goog.events.KeyCodes/DOWN","goog.events.KeyCodes/SPACE","goog.events.KeyCodes/BACKSPACE","goog.events.KeyCodes/A","fexpr__32512","goog.events.KeyCodes/N","G__32513","com.app.core/run"],"sourcesContent":["(ns com.app.core\r\n  (:require\r\n    [cljs.core.async :as async\r\n     :refer [<! >! chan close! sliding-buffer put! alts! timeout]]\r\n    [com.app.generator :as g]\r\n    [com.app.move :as m]\r\n    [com.app.stage :refer [stages]]\r\n    [reagent.core :as r]\r\n    [reagent.dom :as rdom]\r\n    [com.app.generator :as map]\r\n    [cljs.core.async :as c]\r\n    [goog.events.KeyCodes :as keycodes]\r\n    [goog.events :as gev])\r\n  (:import [goog.events EventType KeyHandler]))\r\n\r\n(set! *warn-on-infer* false)\r\n\r\n(def level (atom 1))\r\n(def game-state (atom nil))\r\n(def input (atom []))\r\n\r\n(defn reset-stage []\r\n  (reset! input [])\r\n  (let [curr (stages @level)]\r\n    (reset! game-state (g/init-boards (curr :answer) (curr :maps)))))\r\n\r\n(defn clear-stage? []\r\n  (every? :is_goalin (@game-state :boards)))\r\n\r\n(declare Grid)\r\n\r\n(defn pre-fixed-pos [boards board-count]\r\n  (case board-count\r\n    1 [:div\r\n       (Grid ((first boards) :display-board) 70 10)]\r\n    2 [:div\r\n       (Grid ((first boards) :display-board) 70 10)\r\n       (Grid ((second boards) :display-board) 70 210)]\r\n    3 [:div\r\n       (Grid ((first boards) :display-board) 70 10)\r\n       (Grid ((second boards) :display-board) 70 210)\r\n       (Grid ((nth boards 2) :display-board) 70 410)]\r\n    4 [:div\r\n       (Grid ((first boards) :display-board) 70 10)\r\n       (Grid ((second boards) :display-board) 70 210)\r\n       (Grid ((nth boards 2) :display-board) 270 10)\r\n       (Grid ((nth boards 3) :display-board) 270 210)]\r\n    5 [:div\r\n       (Grid ((first boards) :display-board) 70 10)\r\n       (Grid ((second boards) :display-board) 70 210)\r\n       (Grid ((nth boards 2) :display-board) 70 410)\r\n       (Grid ((nth boards 3) :display-board) 270 10)\r\n       (Grid ((nth boards 4) :display-board) 270 210)]\r\n    6 [:div\r\n       (Grid ((first boards) :display-board) 70 10)\r\n       (Grid ((second boards) :display-board) 70 210)\r\n       (Grid ((nth boards 2) :display-board) 70 410)\r\n       (Grid ((nth boards 3) :display-board) 270 10)\r\n       (Grid ((nth boards 4) :display-board) 270 210)\r\n       (Grid ((nth boards 5) :display-board) 270 410)]))\r\n\r\n\r\n(defn Cell [cell-data col row start-top-pos start-left-pos]\r\n  [:div.grid-cell\r\n   {:style {\r\n            :width    :32px\r\n            :height   :32px\r\n            :position :absolute\r\n            :top      (str (+ start-top-pos (* row 33)) \"px\")\r\n            :left     (str (+ start-left-pos (* col 33)) \"px\")\r\n            }}\r\n   [:img\r\n    {:src (str \"resouces/\" (name cell-data) \"_32.png\")}\r\n    ]])\r\n\r\n(defn Row [rows-data row start-top-pos start-left-pos]\r\n  [:div.grid-row\r\n   (map-indexed (fn [col item] (Cell item col row start-top-pos start-left-pos)) rows-data)])\r\n\r\n(defn Grid [board start-top-pos start-left-pos]\r\n  [:div.grid-container\r\n   (map-indexed (fn [row item] (Row item row start-top-pos start-left-pos)) board)])\r\n\r\n(defn All-Board []\r\n  (let [boards (@game-state :boards)\r\n        div (pre-fixed-pos boards (count ((stages @level) :maps)) )]\r\n    div))\r\n\r\n(defn Title []\r\n  [:div.title\r\n   [:p [:strong {:style {:color \"#474787\"}} \"PARALLEL WOARD\"]]\r\n   [:p {:style {:color \"#474787\"\r\n                :position :absolute\r\n                :top :500px\r\n                :left :10px\r\n                }} (str \"Your Answer : \" @input)]])\r\n\r\n(defn Game-screen []\r\n  [:div.screen\r\n   (Title)\r\n   (All-Board)\r\n   ])\r\n\r\n\r\n(defn capture-key\r\n  \"Given a `keycode`, execute function `f` \"\r\n  [keycode-map]\r\n  (let [key-handler (KeyHandler. js/document)\r\n        press-fn (fn [key-press]\r\n                   (when-let [f (get keycode-map (.. key-press -keyCode))]\r\n                     (f)))]\r\n    (gev/listen key-handler\r\n                (-> KeyHandler .-EventType .-KEY)\r\n                press-fn)))\r\n\r\n(defn update-render []\r\n  (println @input)\r\n  (swap! game-state m/calc-next-game-state @input)\r\n  (rdom/render [Game-screen] (js/document.getElementById \"app\"))\r\n  (if (clear-stage?) (do\r\n                     (js/alert (str \"Clear:\" @level \"\\n Your Answer:\" @input))\r\n                     (swap! level inc)\r\n                     (if (stages @level)\r\n                       (do\r\n                         (reset-stage)\r\n                         (recur)\r\n                        )\r\n                       (js/alert (str \"Clear All Level\")))\r\n                     )))\r\n(defn user-move [key]\r\n  (swap! input concat [key])\r\n  (update-render))\r\n\r\n(defn user-reset []\r\n  (reset! input [])\r\n  (update-render))\r\n\r\n(defn user-undo []\r\n  (swap! input #(drop-last 1 %))\r\n  (update-render))\r\n\r\n\r\n(defn reagent-content-fn []\r\n  (capture-key {keycodes/RIGHT     #(user-move :right)\r\n                keycodes/LEFT      #(user-move :left)\r\n                keycodes/UP        #(user-move :up)\r\n                keycodes/DOWN      #(user-move :down)\r\n                keycodes/SPACE     #(user-undo)\r\n                keycodes/BACKSPACE #(user-reset)\r\n                keycodes/A         #(js/alert (@game-state :answer))\r\n                keycodes/N         #(do\r\n                                      (js/alert (str \"Pass \" @level))\r\n                                      (swap! level inc)\r\n                                      (if (stages @level)\r\n                                        (do\r\n                                          (reset-stage)\r\n                                          (update-render)\r\n                                          ))\r\n                                      )})\r\n  )\r\n\r\n\r\n(defn ^:export run []\r\n  (reset-stage)\r\n  (println @game-state)\r\n  (rdom/render [Game-screen] (js/document.getElementById \"app\"))\r\n  (reagent-content-fn))\r\n\r\n(comment\r\n  (js/alert [:e])\r\n  )"]}